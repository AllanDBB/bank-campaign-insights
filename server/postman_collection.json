{
  "info": {
    "name": "Bank Campaign Insights API",
    "description": "API collection for banking campaign insights dashboard",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/health",
          "host": ["{{baseUrl}}"],
          "path": ["api", "health"]
        },
        "description": "Check server health and database connectivity status"
      },
      "response": []
    },
    {
      "name": "Upload CSV Document",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-user-id",
            "value": "",
            "description": "User ID (ObjectId) - Required"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": [],
              "description": "CSV file to upload (bank-additional-full.csv)"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/api/documents/upload",
          "host": ["{{baseUrl}}"],
          "path": ["api", "documents", "upload"]
        },
        "description": "Upload CSV file with banking campaign data. The file will be parsed, validated, and inserted into the database in batches."
      },
      "response": []
    },
    {
      "name": "Create User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Default\",\n  \"username\": \"default\",\n  \"lastname\": \"user\",\n  \"password\": \"default1234\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users"]
        },
        "description": "Create a new user with name, username, lastname and password"
      },
      "response": []
    },
    {
      "name": "Get User",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/users/:id",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", ":id"],
          "variable": [
            {
              "key": "id",
              "value": "",
              "description": "User ID"
            }
          ]
        },
        "description": "Get user by ID"
      },
      "response": []
    },
    {
      "name": "Get Documents",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-user-id",
            "value": "",
            "description": "User ID (ObjectId) - Required"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/documents?page=1&limit=100",
          "host": ["{{baseUrl}}"],
          "path": ["api", "documents"],
          "query": [
            {
              "key": "page",
              "value": "1",
              "description": "Page number (default: 1)"
            },
            {
              "key": "limit",
              "value": "100",
              "description": "Items per page (default: 100)"
            },
            {
              "key": "sortBy",
              "value": "createdAt",
              "description": "Field to sort by (default: createdAt)",
              "disabled": true
            },
            {
              "key": "order",
              "value": "desc",
              "description": "Sort order: asc or desc (default: desc)",
              "disabled": true
            },
            {
              "key": "age_min",
              "value": "30",
              "description": "Minimum age filter",
              "disabled": true
            },
            {
              "key": "age_max",
              "value": "50",
              "description": "Maximum age filter",
              "disabled": true
            },
            {
              "key": "job",
              "value": "admin,management",
              "description": "Job filter (comma-separated values)",
              "disabled": true
            },
            {
              "key": "marital",
              "value": "married",
              "description": "Marital status filter",
              "disabled": true
            },
            {
              "key": "education",
              "value": "university.degree",
              "description": "Education filter",
              "disabled": true
            },
            {
              "key": "subscribedTermDeposit",
              "value": "yes",
              "description": "Subscription filter",
              "disabled": true
            }
          ]
        },
        "description": "Get documents for the user with optional filters. Supports range filters (field_min, field_max) and multiple choice filters (comma-separated values). Includes pagination."
      },
      "response": []
    },
    {
      "name": "Get All Filters",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-user-id",
            "value": "",
            "description": "User ID (ObjectId) - Required"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/filters",
          "host": ["{{baseUrl}}"],
          "path": ["api", "filters"]
        },
        "description": "Get all saved filters for the user ordered by creation date (newest first). Supports query params: ?id=<mongoId> or ?filterName=<name>"
      },
      "response": []
    },
    {
      "name": "Get Filter By ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-user-id",
            "value": "",
            "description": "User ID (ObjectId) - Required"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/filters?id=507f1f77bcf86cd799439011",
          "host": ["{{baseUrl}}"],
          "path": ["api", "filters"],
          "query": [
            {
              "key": "id",
              "value": "507f1f77bcf86cd799439011",
              "description": "MongoDB _id of the filter"
            }
          ]
        },
        "description": "Get a specific filter by its MongoDB _id using query params"
      },
      "response": []
    },
    {
      "name": "Get Filter By Name",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-user-id",
            "value": "",
            "description": "User ID (ObjectId) - Required"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/filters?filterName=Premium",
          "host": ["{{baseUrl}}"],
          "path": ["api", "filters"],
          "query": [
            {
              "key": "filterName",
              "value": "Premium",
              "description": "Filter name (case-insensitive search)"
            }
          ]
        },
        "description": "Search filters by name using query params (case-insensitive)"
      },
      "response": []
    },
    {
      "name": "Create Filter",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-user-id",
            "value": "",
            "description": "User ID (ObjectId) - Required"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"filterName\": \"Clientes Premium Potenciales\",\n  \"filters\": {\n    \"age\": {\n      \"active\": true,\n      \"type\": \"range\",\n      \"values\": {\n        \"min\": \"30\",\n        \"max\": \"55\"\n      }\n    },\n    \"job\": {\n      \"active\": true,\n      \"type\": \"multiple\",\n      \"values\": [\"admin.\", \"management\", \"technician\"]\n    },\n    \"subscribedTermDeposit\": {\n      \"active\": true,\n      \"type\": \"multiple\",\n      \"values\": [\"yes\"]\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/filters",
          "host": ["{{baseUrl}}"],
          "path": ["api", "filters"]
        },
        "description": "Create a new filter configuration. The ID is auto-generated by MongoDB. Filter names must be unique."
      },
      "response": []
    },
    {
      "name": "Update Filter",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-user-id",
            "value": "",
            "description": "User ID (ObjectId) - Required"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"filterName\": \"Clientes Premium Potenciales Actualizado\",\n  \"filters\": {\n    \"age\": {\n      \"active\": true,\n      \"type\": \"range\",\n      \"values\": {\n        \"min\": \"35\",\n        \"max\": \"60\"\n      }\n    },\n    \"job\": {\n      \"active\": false,\n      \"type\": \"multiple\",\n      \"values\": [\"management\"]\n    },\n    \"marital\": {\n      \"active\": true,\n      \"type\": \"multiple\",\n      \"values\": [\"married\"]\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/filters/507f1f77bcf86cd799439011",
          "host": ["{{baseUrl}}"],
          "path": ["api", "filters", "507f1f77bcf86cd799439011"],
          "variable": [
            {
              "key": "id",
              "value": "507f1f77bcf86cd799439011",
              "description": "MongoDB _id of the filter to update"
            }
          ]
        },
        "description": "Update an existing filter by MongoDB _id. Filter names must remain unique."
      },
      "response": []
    },
    {
      "name": "Delete Filter",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "x-user-id",
            "value": "",
            "description": "User ID (ObjectId) - Required"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/filters/507f1f77bcf86cd799439011",
          "host": ["{{baseUrl}}"],
          "path": ["api", "filters", "507f1f77bcf86cd799439011"],
          "variable": [
            {
              "key": "id",
              "value": "507f1f77bcf86cd799439011",
              "description": "MongoDB _id of the filter to delete"
            }
          ]
        },
        "description": "Delete a filter by its MongoDB _id"
      },
      "response": []
    }
  ]
}
